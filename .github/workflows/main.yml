# name: Deploy to Server

# on:
#   push:
#     branches:
#       - master

# jobs:
#   deploy:
#     name: Deploy to Server
#     runs-on: ubuntu-latest

#     steps:
#       - name: SSH into server and deploy
#         uses: appleboy/ssh-action@v0.1.10
#         with:
#           host: ${{ secrets.SERVER_HOST }}
#           username: ${{ secrets.SERVER_USER }}
#           key: ${{ secrets.SSH_PRIVATE_KEY }}
#           script: |
#             export REPO_NAME=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')
            
#             # Correct branch name extraction from GITHUB_REF
#             BRANCH_NAME=${{ github.head_ref || github.ref_name }}
#             echo "Branch Name: $BRANCH_NAME"

#             # Set the correct directory and docker-compose file based on branch
#             DEPLOY_DIR=~/Mini-Tweeter/mobile_app
#             COMPOSE_FILE="docker-compose.production.yml"
#             CONTAINER_NAME="Mini_Tweeter_api_gateway_production"

#             echo "Deploying to $DEPLOY_DIR using $COMPOSE_FILE for branch $BRANCH_NAME"

#             # Ensure the directory exists
#             if [ ! -d "$DEPLOY_DIR" ]; then
#               echo "Cloning repository for the first time..."
#               git clone -b $BRANCH_NAME https://github.com/${{ github.repository }}.git $DEPLOY_DIR
#             fi

#             cd $DEPLOY_DIR
#             git reset --hard
#             git pull origin $BRANCH_NAME

#             # Ensure correct Dockerfile is present
#             if [ ! -f "Dockerfile" ]; then
#               echo "Error: Dockerfile not found!"
#               exit 1
#             fi

#             # Remove the container based on the branch
#             if docker ps -a --filter "name=$CONTAINER_NAME" --format '{{.Names}}' | grep -w $CONTAINER_NAME > /dev/null; then
#               echo "Stopping and removing existing container $CONTAINER_NAME..."
#               docker stop $CONTAINER_NAME
#               docker rm $CONTAINER_NAME
#             fi

#             # Check if the Docker network exists, create it if it doesn't
#             if ! docker network inspect Mini-Tweeter-network > /dev/null 2>&1; then
#               echo "Docker network Mini-Tweeter-network not found. Creating..."
#               docker network create Mini-Tweeter-network
#             else
#               echo "Docker network Mini-Tweeter-network already exists."
#             fi

#             # Stop and rebuild the container
#             docker compose -f $COMPOSE_FILE down
#             docker compose -f $COMPOSE_FILE build --no-cache
#             docker compose -f $COMPOSE_FILE up -d --force-recreate --no-deps

#             # Cleanup unused images
#             docker system prune -f